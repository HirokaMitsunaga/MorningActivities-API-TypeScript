// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name   String?
  password   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tasks Task[]
  posts Post[]
  likes Like[]
  comments Comment[]
  commentLikes CommentLike[]
}

model Task {
  id      Int      @id @default(autoincrement())
  title   String
  user   User @relation(fields: [userId], references: [id])
  userId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  scheduleMinnutes  Int?
  actualMinutes Int?
}

model Post {
  id      Int      @id @default(autoincrement())
  sentence   String
  user   User @relation(fields: [userId], references: [id])
  userId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  likes Like[]
  comments Comment[]
}

model Like {
  id      Int      @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId  Int
  post   Post @relation(fields: [postId], references: [id])
  postId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id      Int      @id @default(autoincrement())
  comment   String
  user   User @relation(fields: [userId], references: [id])
  userId  Int
  post   Post @relation(fields: [postId], references: [id])
  postId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  commentLikes CommentLike[]
}

model CommentLike {
  id      Int      @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId  Int
  comment   Comment @relation(fields: [commentId], references: [id])
  commentId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}